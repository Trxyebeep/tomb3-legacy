#pragma once
#include "../global/types.h"

void TriggerDynamic(long x, long y, long z, long falloff, long r, long g, long b);
void ClearDynamics();
void KillEverything();
void TriggerBreath(long x, long y, long z, long xv, long yv, long zv);
void TriggerAlertLight(long x, long y, long z, long r, long g, long b, short angle, short rn);
void TriggerFireFlame(long x, long y, long z, long body_part, long type);
void TriggerFireSmoke(long x, long y, long z, long body_part, long type);
void TriggerStaticFlame(long x, long y, long z, long size);
void TriggerSideFlame(long x, long y, long z, long angle, long speed, long pilot);
void TriggerRocketSmoke(long x, long y, long z, long c);
void TriggerRicochetSpark(GAME_VECTOR* pos, long angle, long size);
void TriggerBlood(long x, long y, long z, long angle, long num);
void TriggerBloodD(long x, long y, long z, long angle, long num);
void TriggerUnderwaterBlood(long x, long y, long z, long size);
void TriggerUnderwaterBloodD(long x, long y, long z, long size);
void TriggerFlareSparks(long x, long y, long z, long xv, long yv, long zv, long smoke, long unused);
void TriggerGunSmoke(long x, long y, long z, long xv, long yv, long zv, long initial, long weapon, long shade);
void TriggerExplosionSparks(long x, long y, long z, long extras, long dynamic, long uw, short room_number);
void TriggerExplosionSmoke(long x, long y, long z, long uw);
void TriggerExplosionSmokeEnd(long x, long y, long z, long uw);
void TriggerShotgunSparks(long x, long y, long z, long xv, long yv, long zv);
void TriggerRocketFlame(long x, long y, long z, long xv, long yv, long zv, long itemNum);
void TriggerWaterfallMist(long x, long y, long z, long ang);
void TriggerDartSmoke(long x, long y, long z, long xv, long zv, long hit);
void TriggerExplosionBubble(long x, long y, long z, short room_number);
void TriggerBubble(long x, long y, long z, long size, long sizerange, short fxNum);
void ControlSmokeEmitter(short item_number);
void DetatchSpark(long num, long type);
long GetFreeSpark();
void InitialiseSparks();
void UpdateSparks();
void TriggerGunShell(short lr, long objNum, long weapon);
void ControlGunShell(short fx_number);
RIPPLE_STRUCT* SetupRipple(long x, long y, long z, long size, long flags);
void SetupSplash(SPLASH_SETUP* setup);
void UpdateSplashes();
void ControlColouredLights(short item_number);
void KillAllCurrentItems(short item_number);
void TriggerBats(long x, long y, long z, short ang);
void BatEmitterControl(short item_number);
void UpdateBats();

extern SPARKS sparks[192];
extern BAT_STRUCT bats[32];
extern SPLASH_STRUCT splashes[4];
extern RIPPLE_STRUCT ripples[16];
extern SPLASH_SETUP splash_setup;
extern long SplashCount;
extern long KillEverythingFlag;
extern long SmokeCountL;
extern long SmokeCountR;
extern long SmokeWeapon;
extern long SmokeWindX;
extern long SmokeWindZ;
extern DYNAMIC dynamics[64];
extern long number_dynamics;
extern long wibble;
